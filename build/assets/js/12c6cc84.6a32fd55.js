"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[21047],{3905:function(e,n,r){r.d(n,{Zo:function(){return s},kt:function(){return p}});var o=r(67294);function t(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function i(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,o)}return r}function a(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?i(Object(r),!0).forEach((function(n){t(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function l(e,n){if(null==e)return{};var r,o,t=function(e,n){if(null==e)return{};var r,o,t={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],n.indexOf(r)>=0||(t[r]=e[r]);return t}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(t[r]=e[r])}return t}var d=o.createContext({}),m=function(e){var n=o.useContext(d),r=n;return e&&(r="function"==typeof e?e(n):a(a({},n),e)),r},s=function(e){var n=m(e.components);return o.createElement(d.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},c=o.forwardRef((function(e,n){var r=e.components,t=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),c=m(r),p=t,b=c["".concat(d,".").concat(p)]||c[p]||u[p]||i;return r?o.createElement(b,a(a({ref:n},s),{},{components:r})):o.createElement(b,a({ref:n},s))}));function p(e,n){var r=arguments,t=n&&n.mdxType;if("string"==typeof e||t){var i=r.length,a=new Array(i);a[0]=c;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:t,a[1]=l;for(var m=2;m<i;m++)a[m]=r[m];return o.createElement.apply(null,a)}return o.createElement.apply(null,r)}c.displayName="MDXCreateElement"},58215:function(e,n,r){var o=r(67294);n.Z=function(e){var n=e.children,r=e.hidden,t=e.className;return o.createElement("div",{role:"tabpanel",hidden:r,className:t},n)}},26396:function(e,n,r){r.d(n,{Z:function(){return c}});var o=r(87462),t=r(67294),i=r(72389),a=r(79443);var l=function(){var e=(0,t.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},d=r(89521),m=r(86010),s="tabItem_1uMI";function u(e){var n,r,o,i=e.lazy,a=e.block,u=e.defaultValue,c=e.values,p=e.groupId,b=e.className,I=t.Children.map(e.children,(function(e){if((0,t.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),f=null!=c?c:I.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),v=(0,d.lx)(f,(function(e,n){return e.value===n.value}));if(v.length>0)throw new Error('Docusaurus error: Duplicate values "'+v.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===u?u:null!=(n=null!=u?u:null==(r=I.find((function(e){return e.props.default})))?void 0:r.props.value)?n:null==(o=I[0])?void 0:o.props.value;if(null!==g&&!f.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+f.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var h=l(),x=h.tabGroupChoices,y=h.setTabGroupChoices,k=(0,t.useState)(g),w=k[0],T=k[1],N=[],C=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=p){var R=x[p];null!=R&&R!==w&&f.some((function(e){return e.value===R}))&&T(R)}var O=function(e){var n=e.currentTarget,r=N.indexOf(n),o=f[r].value;o!==w&&(C(n),T(o),null!=p&&y(p,o))},z=function(e){var n,r=null;switch(e.key){case"ArrowRight":var o=N.indexOf(e.currentTarget)+1;r=N[o]||N[0];break;case"ArrowLeft":var t=N.indexOf(e.currentTarget)-1;r=N[t]||N[N.length-1]}null==(n=r)||n.focus()};return t.createElement("div",{className:"tabs-container"},t.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":a},b)},f.map((function(e){var n=e.value,r=e.label;return t.createElement("li",{role:"tab",tabIndex:w===n?0:-1,"aria-selected":w===n,className:(0,m.Z)("tabs__item",s,{"tabs__item--active":w===n}),key:n,ref:function(e){return N.push(e)},onKeyDown:z,onFocus:O,onClick:O},null!=r?r:n)}))),i?(0,t.cloneElement)(I.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):t.createElement("div",{className:"margin-vert--md"},I.map((function(e,n){return(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==w})}))))}function c(e){var n=(0,i.Z)();return t.createElement(u,(0,o.Z)({key:String(n)},e))}},18223:function(e,n,r){r.r(n),r.d(n,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return u},toc:function(){return c},default:function(){return b}});var o=r(87462),t=r(63366),i=(r(67294),r(3905)),a=r(26396),l=r(58215),d=["components"],m={sidebar_label:"ion-reorder",demoUrl:"/docs/demos/api/reorder/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/reorder/index.html"},s="ion-reorder",u={unversionedId:"api/reorder",id:"version-v5/api/reorder",isDocsHomePage:!1,title:"ion-reorder",description:"Reorder is a component that allows an item in a group of items to be dragged to change its order within that group. It must be used within an ion-reorder-group to provide a visual drag and drop interface.",source:"@site/versioned_docs/version-v5/api/reorder.md",sourceDirName:"api",slug:"/api/reorder",permalink:"/developer/docs/v5/api/reorder",editUrl:"https://github.com/ionic-team/ionic-docs/tree/main/docs/api/reorder.md",tags:[],version:"v5",frontMatter:{sidebar_label:"ion-reorder",demoUrl:"/docs/demos/api/reorder/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/reorder/index.html"},sidebar:"version-v5/api",previous:{title:"ion-refresher-content",permalink:"/developer/docs/v5/api/refresher-content"},next:{title:"ion-reorder-group",permalink:"/developer/docs/v5/api/reorder-group"}},c=[{value:"Usage",id:"usage",children:[],level:2},{value:"CSS Shadow Parts",id:"css-shadow-parts",children:[],level:2}],p={toc:c};function b(e){var n=e.components,r=(0,t.Z)(e,d);return(0,i.kt)("wrapper",(0,o.Z)({},p,r,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ion-reorder"},"ion-reorder"),(0,i.kt)("p",null,"Reorder is a component that allows an item in a group of items to be dragged to change its order within that group. It must be used within an ",(0,i.kt)("inlineCode",{parentName:"p"},"ion-reorder-group")," to provide a visual drag and drop interface."),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"ion-reorder")," is the anchor used to drag and drop the items inside of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ion-reorder-group"),". See the ",(0,i.kt)("a",{parentName:"p",href:"/developer/docs/v5/api/reorder-group"},"Reorder Group")," for more information on how to complete the reorder operation."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(a.Z,{groupId:"framework",defaultValue:"angular",values:[{value:"angular",label:"Angular"},{value:"javascript",label:"Javascript"},{value:"react",label:"React"},{value:"stencil",label:"Stencil"},{value:"vue",label:"Vue"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"angular",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n<ion-reorder-group disabled="false">\n  \x3c!-- Default reorder icon, end aligned items --\x3e\n  <ion-item>\n    <ion-label> Item 1 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 2 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  \x3c!-- Default reorder icon, start aligned items --\x3e\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 3 </ion-label>\n  </ion-item>\n\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 4 </ion-label>\n  </ion-item>\n\n  \x3c!-- Custom reorder icon end items --\x3e\n  <ion-item>\n    <ion-label> Item 5 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 6 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 7 </ion-label>\n    </ion-item>\n  </ion-reorder>\n\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 8 </ion-label>\n    </ion-item>\n  </ion-reorder>\n</ion-reorder-group>\n'))),(0,i.kt)(l.Z,{value:"javascript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n<ion-reorder-group disabled="false">\n  \x3c!-- Default reorder icon, end aligned items --\x3e\n  <ion-item>\n    <ion-label> Item 1 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 2 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  \x3c!-- Default reorder icon, start aligned items --\x3e\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 3 </ion-label>\n  </ion-item>\n\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 4 </ion-label>\n  </ion-item>\n\n  \x3c!-- Custom reorder icon end items --\x3e\n  <ion-item>\n    <ion-label> Item 5 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 6 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 7 </ion-label>\n    </ion-item>\n  </ion-reorder>\n\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 8 </ion-label>\n    </ion-item>\n  </ion-reorder>\n</ion-reorder-group>\n'))),(0,i.kt)(l.Z,{value:"react",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import React from \'react\';\nimport { IonIcon, IonItem, IonLabel, IonReorder, IonReorderGroup, IonContent } from \'@ionic/react\';\nimport { pizza } from \'ionicons/icons\';\n\nexport const ReorderExample: React.FC = () => (\n  <IonContent>\n    {/*-- The reorder gesture is disabled by default, enable it to drag and drop items --*/}\n    <IonReorderGroup disabled={false}>\n      {/*-- Default reorder icon, end aligned items --*/}\n      <IonItem>\n        <IonLabel>Item 1</IonLabel>\n        <IonReorder slot="end" />\n      </IonItem>\n\n      <IonItem>\n        <IonLabel>Item 2</IonLabel>\n        <IonReorder slot="end" />\n      </IonItem>\n\n      {/*-- Default reorder icon, start aligned items --*/}\n      <IonItem>\n        <IonReorder slot="start" />\n        <IonLabel>Item 3</IonLabel>\n      </IonItem>\n\n      <IonItem>\n        <IonReorder slot="start" />\n        <IonLabel>Item 4</IonLabel>\n      </IonItem>\n\n      {/*-- Custom reorder icon end items --*/}\n      <IonItem>\n        <IonLabel>Item 5</IonLabel>\n        <IonReorder slot="end">\n          <IonIcon icon={pizza} />\n        </IonReorder>\n      </IonItem>\n\n      <IonItem>\n        <IonLabel>Item 6</IonLabel>\n        <IonReorder slot="end">\n          <IonIcon icon={pizza} />\n        </IonReorder>\n      </IonItem>\n\n      {/*-- Items wrapped in a reorder, entire item can be dragged --*/}\n      <IonReorder>\n        <IonItem>\n          <IonLabel>Item 7</IonLabel>\n        </IonItem>\n      </IonReorder>\n\n      <IonReorder>\n        <IonItem>\n          <IonLabel>Item 8</IonLabel>\n        </IonItem>\n      </IonReorder>\n    </IonReorderGroup>\n  </IonContent>\n);\n'))),(0,i.kt)(l.Z,{value:"stencil",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Component, h } from \'@stencil/core\';\n\n@Component({\n  tag: \'reorder-example\',\n  styleUrl: \'reorder-example.css\',\n})\nexport class ReorderExample {\n  render() {\n    return [\n      // The reorder gesture is disabled by default, enable it to drag and drop items\n      <ion-reorder-group disabled={false}>\n        {/* Default reorder icon, end aligned items */}\n        <ion-item>\n          <ion-label>Item 1</ion-label>\n          <ion-reorder slot="end"></ion-reorder>\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Item 2</ion-label>\n          <ion-reorder slot="end"></ion-reorder>\n        </ion-item>\n\n        {/* Default reorder icon, start aligned items */}\n        <ion-item>\n          <ion-reorder slot="start"></ion-reorder>\n          <ion-label>Item 3</ion-label>\n        </ion-item>\n\n        <ion-item>\n          <ion-reorder slot="start"></ion-reorder>\n          <ion-label>Item 4</ion-label>\n        </ion-item>\n\n        {/* Custom reorder icon end items */}\n        <ion-item>\n          <ion-label>Item 5</ion-label>\n          <ion-reorder slot="end">\n            <ion-icon name="pizza"></ion-icon>\n          </ion-reorder>\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Item 6</ion-label>\n          <ion-reorder slot="end">\n            <ion-icon name="pizza"></ion-icon>\n          </ion-reorder>\n        </ion-item>\n\n        {/* Items wrapped in a reorder, entire item can be dragged */}\n        <ion-reorder>\n          <ion-item>\n            <ion-label>Item 7</ion-label>\n          </ion-item>\n        </ion-reorder>\n\n        <ion-reorder>\n          <ion-item>\n            <ion-label>Item 8</ion-label>\n          </ion-item>\n        </ion-reorder>\n      </ion-reorder-group>,\n    ];\n  }\n}\n'))),(0,i.kt)(l.Z,{value:"vue",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  \x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n  <ion-reorder-group :disabled="false">\n    \x3c!-- Default reorder icon, end aligned items --\x3e\n    <ion-item>\n      <ion-label> Item 1 </ion-label>\n      <ion-reorder slot="end"></ion-reorder>\n    </ion-item>\n\n    <ion-item>\n      <ion-label> Item 2 </ion-label>\n      <ion-reorder slot="end"></ion-reorder>\n    </ion-item>\n\n    \x3c!-- Default reorder icon, start aligned items --\x3e\n    <ion-item>\n      <ion-reorder slot="start"></ion-reorder>\n      <ion-label> Item 3 </ion-label>\n    </ion-item>\n\n    <ion-item>\n      <ion-reorder slot="start"></ion-reorder>\n      <ion-label> Item 4 </ion-label>\n    </ion-item>\n\n    \x3c!-- Custom reorder icon end items --\x3e\n    <ion-item>\n      <ion-label> Item 5 </ion-label>\n      <ion-reorder slot="end">\n        <ion-icon name="pizza"></ion-icon>\n      </ion-reorder>\n    </ion-item>\n\n    <ion-item>\n      <ion-label> Item 6 </ion-label>\n      <ion-reorder slot="end">\n        <ion-icon name="pizza"></ion-icon>\n      </ion-reorder>\n    </ion-item>\n\n    \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n    <ion-reorder>\n      <ion-item>\n        <ion-label> Item 7 </ion-label>\n      </ion-item>\n    </ion-reorder>\n\n    <ion-reorder>\n      <ion-item>\n        <ion-label> Item 8 </ion-label>\n      </ion-item>\n    </ion-reorder>\n  </ion-reorder-group>\n</template>\n\n<script>\n  import { IonIcon, IonItem, IonLabel, IonReorder, IonReorderGroup } from \'@ionic/vue\';\n  import { pizza } from \'ionicons/icons\';\n  import { defineComponent } from \'vue\';\n\n  export default defineComponent({\n    components: {\n      IonIcon,\n      IonItem,\n      IonLabel,\n      IonReorder,\n      IonReorderGroup,\n    },\n    setup() {\n      return { pizza };\n    },\n  });\n<\/script>\n')))),(0,i.kt)("h2",{id:"css-shadow-parts"},"CSS Shadow Parts"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"icon")),(0,i.kt)("td",{parentName:"tr",align:null},"The icon of the reorder handle (uses ion-icon).")))))}b.isMDXComponent=!0}}]);