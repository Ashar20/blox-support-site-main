"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[31136],{3905:function(e,n,t){t.d(n,{Zo:function(){return s},kt:function(){return c}});var r=t(67294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var d=r.createContext({}),m=function(e){var n=r.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},s=function(e){var n=m(e.components);return r.createElement(d.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,d=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=m(t),c=o,h=u["".concat(d,".").concat(c)]||u[c]||p[c]||i;return t?r.createElement(h,a(a({ref:n},s),{},{components:t})):r.createElement(h,a({ref:n},s))}));function c(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var m=2;m<i;m++)a[m]=t[m];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},58215:function(e,n,t){var r=t(67294);n.Z=function(e){var n=e.children,t=e.hidden,o=e.className;return r.createElement("div",{role:"tabpanel",hidden:t,className:o},n)}},26396:function(e,n,t){t.d(n,{Z:function(){return u}});var r=t(87462),o=t(67294),i=t(72389),a=t(79443);var l=function(){var e=(0,o.useContext)(a.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},d=t(89521),m=t(86010),s="tabItem_1uMI";function p(e){var n,t,r,i=e.lazy,a=e.block,p=e.defaultValue,u=e.values,c=e.groupId,h=e.className,b=o.Children.map(e.children,(function(e){if((0,o.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),g=null!=u?u:b.map((function(e){var n=e.props;return{value:n.value,label:n.label}})),f=(0,d.lx)(g,(function(e,n){return e.value===n.value}));if(f.length>0)throw new Error('Docusaurus error: Duplicate values "'+f.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var v=null===p?p:null!=(n=null!=p?p:null==(t=b.find((function(e){return e.props.default})))?void 0:t.props.value)?n:null==(r=b[0])?void 0:r.props.value;if(null!==v&&!g.some((function(e){return e.value===v})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+v+'" but none of its children has the corresponding value. Available values are: '+g.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var I=l(),k=I.tabGroupChoices,y=I.setTabGroupChoices,N=(0,o.useState)(v),x=N[0],w=N[1],R=[],C=(0,d.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var D=k[c];null!=D&&D!==x&&g.some((function(e){return e.value===D}))&&w(D)}var T=function(e){var n=e.currentTarget,t=R.indexOf(n),r=g[t].value;r!==x&&(C(n),w(r),null!=c&&y(c,r))},E=function(e){var n,t=null;switch(e.key){case"ArrowRight":var r=R.indexOf(e.currentTarget)+1;t=R[r]||R[0];break;case"ArrowLeft":var o=R.indexOf(e.currentTarget)-1;t=R[o]||R[R.length-1]}null==(n=t)||n.focus()};return o.createElement("div",{className:"tabs-container"},o.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,m.Z)("tabs",{"tabs--block":a},h)},g.map((function(e){var n=e.value,t=e.label;return o.createElement("li",{role:"tab",tabIndex:x===n?0:-1,"aria-selected":x===n,className:(0,m.Z)("tabs__item",s,{"tabs__item--active":x===n}),key:n,ref:function(e){return R.push(e)},onKeyDown:E,onFocus:T,onClick:T},null!=t?t:n)}))),i?(0,o.cloneElement)(b.filter((function(e){return e.props.value===x}))[0],{className:"margin-vert--md"}):o.createElement("div",{className:"margin-vert--md"},b.map((function(e,n){return(0,o.cloneElement)(e,{key:n,hidden:e.props.value!==x})}))))}function u(e){var n=(0,i.Z)();return o.createElement(p,(0,r.Z)({key:String(n)},e))}},47713:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return m},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return u},default:function(){return h}});var r=t(87462),o=t(63366),i=(t(67294),t(3905)),a=t(26396),l=t(58215),d=["components"],m={sidebar_label:"ion-reorder-group"},s="ion-reorder-group",p={unversionedId:"api/reorder-group",id:"version-v5/api/reorder-group",isDocsHomePage:!1,title:"ion-reorder-group",description:"The reorder group is a wrapper component for items using the ion-reorder component. See the Reorder documentation for further information about the anchor component that is used to drag items within the ion-reorder-group.",source:"@site/versioned_docs/version-v5/api/reorder-group.md",sourceDirName:"api",slug:"/api/reorder-group",permalink:"/developer/docs/v5/api/reorder-group",editUrl:"https://github.com/ionic-team/ionic-docs/tree/main/docs/api/reorder-group.md",tags:[],version:"v5",frontMatter:{sidebar_label:"ion-reorder-group"},sidebar:"version-v5/api",previous:{title:"ion-reorder",permalink:"/developer/docs/v5/api/reorder"},next:{title:"ion-router",permalink:"/developer/docs/v5/api/router"}},u=[{value:"Usage",id:"usage",children:[{value:"Updating Data",id:"updating-data",children:[],level:3},{value:"Updating Data",id:"updating-data-1",children:[],level:3},{value:"Updating Data",id:"updating-data-2",children:[],level:3},{value:"Updating Data",id:"updating-data-3",children:[],level:3},{value:"Updating Data",id:"updating-data-4",children:[],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"disabled",id:"disabled",children:[],level:3}],level:2},{value:"Events",id:"events",children:[],level:2},{value:"Methods",id:"methods",children:[{value:"complete",id:"complete",children:[],level:3}],level:2}],c={toc:u};function h(e){var n=e.components,t=(0,o.Z)(e,d);return(0,i.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"ion-reorder-group"},"ion-reorder-group"),(0,i.kt)("p",null,"The reorder group is a wrapper component for items using the ",(0,i.kt)("inlineCode",{parentName:"p"},"ion-reorder")," component. See the ",(0,i.kt)("a",{parentName:"p",href:"/developer/docs/v5/api/reorder"},"Reorder documentation")," for further information about the anchor component that is used to drag items within the ",(0,i.kt)("inlineCode",{parentName:"p"},"ion-reorder-group"),"."),(0,i.kt)("p",null,"Once the user drags an item and drops it in a new position, the ",(0,i.kt)("inlineCode",{parentName:"p"},"ionItemReorder")," event is dispatched. A handler for it should be implemented that calls the ",(0,i.kt)("inlineCode",{parentName:"p"},"complete()")," method."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"detail")," property of the ",(0,i.kt)("inlineCode",{parentName:"p"},"ionItemReorder")," event includes all of the relevant information about the reorder operation, including the ",(0,i.kt)("inlineCode",{parentName:"p"},"from")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"to")," indexes. In the context of reordering, an item moves ",(0,i.kt)("inlineCode",{parentName:"p"},"from")," an index ",(0,i.kt)("inlineCode",{parentName:"p"},"to")," a new index."),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)(a.Z,{groupId:"framework",defaultValue:"angular",values:[{value:"angular",label:"Angular"},{value:"javascript",label:"Javascript"},{value:"react",label:"React"},{value:"stencil",label:"Stencil"},{value:"vue",label:"Vue"}],mdxType:"Tabs"},(0,i.kt)(l.Z,{value:"angular",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n<ion-reorder-group (ionItemReorder)="doReorder($event)" disabled="false">\n  \x3c!-- Default reorder icon, end aligned items --\x3e\n  <ion-item>\n    <ion-label> Item 1 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 2 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  \x3c!-- Default reorder icon, start aligned items --\x3e\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 3 </ion-label>\n  </ion-item>\n\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 4 </ion-label>\n  </ion-item>\n\n  \x3c!-- Custom reorder icon end items --\x3e\n  <ion-item>\n    <ion-label> Item 5 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 6 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 7 </ion-label>\n    </ion-item>\n  </ion-reorder>\n\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 8 </ion-label>\n    </ion-item>\n  </ion-reorder>\n</ion-reorder-group>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Component, ViewChild } from '@angular/core';\nimport { IonReorderGroup } from '@ionic/angular';\nimport { ItemReorderEventDetail } from '@ionic/core';\n\n@Component({\n  selector: 'reorder-group-example',\n  templateUrl: 'reorder-group-example.html',\n  styleUrls: ['./reorder-group-example.css'],\n})\nexport class ReorderGroupExample {\n  @ViewChild(IonReorderGroup) reorderGroup: IonReorderGroup;\n\n  constructor() {}\n\n  doReorder(ev: CustomEvent<ItemReorderEventDetail>) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log('Dragged from index', ev.detail.from, 'to', ev.detail.to);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    ev.detail.complete();\n  }\n\n  toggleReorderGroup() {\n    this.reorderGroup.disabled = !this.reorderGroup.disabled;\n  }\n}\n")),(0,i.kt)("h3",{id:"updating-data"},"Updating Data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"import { Component, ViewChild } from '@angular/core';\nimport { IonReorderGroup } from '@ionic/angular';\nimport { ItemReorderEventDetail } from '@ionic/core';\n\n@Component({\n  selector: 'reorder-group-example',\n  templateUrl: 'reorder-group-example.html',\n  styleUrls: ['./reorder-group-example.css'],\n})\nexport class ReorderGroupExample {\n  items = [1, 2, 3, 4, 5];\n\n  @ViewChild(IonReorderGroup) reorderGroup: IonReorderGroup;\n\n  constructor() {}\n\n  doReorder(ev: CustomEvent<ItemReorderEventDetail>) {\n    // Before complete is called with the items they will remain in the\n    // order before the drag\n    console.log('Before complete', this.items);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. Update the items variable to the\n    // new order of items\n    this.items = ev.detail.complete(this.items);\n\n    // After complete is called the items will be in the new order\n    console.log('After complete', this.items);\n  }\n}\n"))),(0,i.kt)(l.Z,{value:"javascript",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'\x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n<ion-reorder-group disabled="false">\n  \x3c!-- Default reorder icon, end aligned items --\x3e\n  <ion-item>\n    <ion-label> Item 1 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 2 </ion-label>\n    <ion-reorder slot="end"></ion-reorder>\n  </ion-item>\n\n  \x3c!-- Default reorder icon, start aligned items --\x3e\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 3 </ion-label>\n  </ion-item>\n\n  <ion-item>\n    <ion-reorder slot="start"></ion-reorder>\n    <ion-label> Item 4 </ion-label>\n  </ion-item>\n\n  \x3c!-- Custom reorder icon end items --\x3e\n  <ion-item>\n    <ion-label> Item 5 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  <ion-item>\n    <ion-label> Item 6 </ion-label>\n    <ion-reorder slot="end">\n      <ion-icon name="pizza"></ion-icon>\n    </ion-reorder>\n  </ion-item>\n\n  \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 7 </ion-label>\n    </ion-item>\n  </ion-reorder>\n\n  <ion-reorder>\n    <ion-item>\n      <ion-label> Item 8 </ion-label>\n    </ion-item>\n  </ion-reorder>\n</ion-reorder-group>\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const reorderGroup = document.querySelector('ion-reorder-group');\n\nreorderGroup.addEventListener('ionItemReorder', ({ detail }) => {\n  // The `from` and `to` properties contain the index of the item\n  // when the drag started and ended, respectively\n  console.log('Dragged from index', detail.from, 'to', detail.to);\n\n  // Finish the reorder and position the item in the DOM based on\n  // where the gesture ended. This method can also be called directly\n  // by the reorder group\n  detail.complete();\n});\n")),(0,i.kt)("h3",{id:"updating-data-1"},"Updating Data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},"const items = [1, 2, 3, 4, 5];\nconst reorderGroup = document.querySelector('ion-reorder-group');\n\nreorderGroup.addEventListener('ionItemReorder', ({ detail }) => {\n  // Before complete is called with the items they will remain in the\n  // order before the drag\n  console.log('Before complete', items);\n\n  // Finish the reorder and position the item in the DOM based on\n  // where the gesture ended. Update the items variable to the\n  // new order of items\n  items = detail.complete(items);\n\n  // After complete is called the items will be in the new order\n  console.log('After complete', items);\n});\n"))),(0,i.kt)(l.Z,{value:"react",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import React from 'react';\nimport { IonItem, IonLabel, IonReorder, IonReorderGroup, IonIcon, IonContent } from '@ionic/react';\nimport { ItemReorderEventDetail } from '@ionic/core';\nimport { pizza } from 'ionicons/icons';\n\nfunction doReorder(event: CustomEvent<ItemReorderEventDetail>) {\n  // The `from` and `to` properties contain the index of the item\n  // when the drag started and ended, respectively\n  console.log('Dragged from index', event.detail.from, 'to', event.detail.to);\n\n  // Finish the reorder and position the item in the DOM based on\n  // where the gesture ended. This method can also be called directly\n  // by the reorder group\n  event.detail.complete();\n}\n\nexport const ReorderGroupExample: React.FC = () => (\n  <IonContent>\n    {/*-- The reorder gesture is disabled by default, enable it to drag and drop items --*/}\n    <IonReorderGroup disabled={false} onIonItemReorder={doReorder}>\n      {/*-- Default reorder icon, end aligned items --*/}\n      <IonItem>\n        <IonLabel>Item 1</IonLabel>\n        <IonReorder slot=\"end\" />\n      </IonItem>\n\n      <IonItem>\n        <IonLabel>Item 2</IonLabel>\n        <IonReorder slot=\"end\" />\n      </IonItem>\n\n      {/*-- Default reorder icon, start aligned items --*/}\n      <IonItem>\n        <IonReorder slot=\"start\" />\n        <IonLabel>Item 3</IonLabel>\n      </IonItem>\n\n      <IonItem>\n        <IonReorder slot=\"start\" />\n        <IonLabel>Item 4</IonLabel>\n      </IonItem>\n\n      {/*-- Custom reorder icon end items --*/}\n      <IonItem>\n        <IonLabel>Item 5</IonLabel>\n        <IonReorder slot=\"end\">\n          <IonIcon icon={pizza} />\n        </IonReorder>\n      </IonItem>\n\n      <IonItem>\n        <IonLabel>Item 6</IonLabel>\n        <IonReorder slot=\"end\">\n          <IonIcon icon={pizza} />\n        </IonReorder>\n      </IonItem>\n\n      {/*-- Items wrapped in a reorder, entire item can be dragged --*/}\n      <IonReorder>\n        <IonItem>\n          <IonLabel>Item 7</IonLabel>\n        </IonItem>\n      </IonReorder>\n\n      <IonReorder>\n        <IonItem>\n          <IonLabel>Item 8</IonLabel>\n        </IonItem>\n      </IonReorder>\n    </IonReorderGroup>\n  </IonContent>\n);\n")),(0,i.kt)("h3",{id:"updating-data-2"},"Updating Data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"const items = [1, 2, 3, 4, 5];\n\nfunction doReorder(event: CustomEvent) {\n  // Before complete is called with the items they will remain in the\n  // order before the drag\n  console.log('Before complete', this.items);\n\n  // Finish the reorder and position the item in the DOM based on\n  // where the gesture ended. Update the items variable to the\n  // new order of items\n  this.items = event.detail.complete(this.items);\n\n  // After complete is called the items will be in the new order\n  console.log('After complete', this.items);\n}\n"))),(0,i.kt)(l.Z,{value:"stencil",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},'import { Component, h } from \'@stencil/core\';\n\n@Component({\n  tag: \'reorder-group-example\',\n  styleUrl: \'reorder-group-example.css\',\n})\nexport class ReorderGroupExample {\n  doReorder(ev: any) {\n    // The `from` and `to` properties contain the index of the item\n    // when the drag started and ended, respectively\n    console.log(\'Dragged from index\', ev.detail.from, \'to\', ev.detail.to);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. This method can also be called directly\n    // by the reorder group\n    ev.detail.complete();\n  }\n\n  render() {\n    return [\n      // The reorder gesture is disabled by default, enable it to drag and drop items\n      <ion-reorder-group onIonItemReorder={(ev) => this.doReorder(ev)} disabled={false}>\n        {/* Default reorder icon, end aligned items */}\n        <ion-item>\n          <ion-label>Item 1</ion-label>\n          <ion-reorder slot="end"></ion-reorder>\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Item 2</ion-label>\n          <ion-reorder slot="end"></ion-reorder>\n        </ion-item>\n\n        {/* Default reorder icon, start aligned items */}\n        <ion-item>\n          <ion-reorder slot="start"></ion-reorder>\n          <ion-label>Item 3</ion-label>\n        </ion-item>\n\n        <ion-item>\n          <ion-reorder slot="start"></ion-reorder>\n          <ion-label>Item 4</ion-label>\n        </ion-item>\n\n        {/* Custom reorder icon end items */}\n        <ion-item>\n          <ion-label>Item 5</ion-label>\n          <ion-reorder slot="end">\n            <ion-icon name="pizza"></ion-icon>\n          </ion-reorder>\n        </ion-item>\n\n        <ion-item>\n          <ion-label>Item 6</ion-label>\n          <ion-reorder slot="end">\n            <ion-icon name="pizza"></ion-icon>\n          </ion-reorder>\n        </ion-item>\n\n        {/* Items wrapped in a reorder, entire item can be dragged */}\n        <ion-reorder>\n          <ion-item>\n            <ion-label>Item 7</ion-label>\n          </ion-item>\n        </ion-reorder>\n\n        <ion-reorder>\n          <ion-item>\n            <ion-label>Item 8</ion-label>\n          </ion-item>\n        </ion-reorder>\n      </ion-reorder-group>,\n    ];\n  }\n}\n')),(0,i.kt)("h3",{id:"updating-data-3"},"Updating Data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, State, h } from '@stencil/core';\n\n@Component({\n  tag: 'reorder-group-example',\n  styleUrl: 'reorder-group-example.css',\n})\nexport class ReorderGroupExample {\n  @State() items = [1, 2, 3, 4, 5];\n\n  doReorder(ev: any) {\n    // Before complete is called with the items they will remain in the\n    // order before the drag\n    console.log('Before complete', this.items);\n\n    // Finish the reorder and position the item in the DOM based on\n    // where the gesture ended. Update the items variable to the\n    // new order of items\n    this.items = ev.detail.complete(this.items);\n\n    // After complete is called the items will be in the new order\n    console.log('After complete', this.items);\n  }\n\n  render() {\n    return [\n      // The reorder gesture is disabled by default, enable it to drag and drop items\n      <ion-reorder-group onIonItemReorder={(ev) => this.doReorder(ev)} disabled={false}>\n        {this.items.map((item) => (\n          <ion-item>\n            <ion-label>Item {item}</ion-label>\n            <ion-reorder slot=\"end\"></ion-reorder>\n          </ion-item>\n        ))}\n      </ion-reorder-group>,\n    ];\n  }\n}\n"))),(0,i.kt)(l.Z,{value:"vue",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  \x3c!-- The reorder gesture is disabled by default, enable it to drag and drop items --\x3e\n  <ion-reorder-group @ionItemReorder="doReorder($event)" disabled="false">\n    \x3c!-- Default reorder icon, end aligned items --\x3e\n    <ion-item>\n      <ion-label> Item 1 </ion-label>\n      <ion-reorder slot="end"></ion-reorder>\n    </ion-item>\n\n    <ion-item>\n      <ion-label> Item 2 </ion-label>\n      <ion-reorder slot="end"></ion-reorder>\n    </ion-item>\n\n    \x3c!-- Default reorder icon, start aligned items --\x3e\n    <ion-item>\n      <ion-reorder slot="start"></ion-reorder>\n      <ion-label> Item 3 </ion-label>\n    </ion-item>\n\n    <ion-item>\n      <ion-reorder slot="start"></ion-reorder>\n      <ion-label> Item 4 </ion-label>\n    </ion-item>\n\n    \x3c!-- Custom reorder icon end items --\x3e\n    <ion-item>\n      <ion-label> Item 5 </ion-label>\n      <ion-reorder slot="end">\n        <ion-icon name="pizza"></ion-icon>\n      </ion-reorder>\n    </ion-item>\n\n    <ion-item>\n      <ion-label> Item 6 </ion-label>\n      <ion-reorder slot="end">\n        <ion-icon name="pizza"></ion-icon>\n      </ion-reorder>\n    </ion-item>\n\n    \x3c!-- Items wrapped in a reorder, entire item can be dragged --\x3e\n    <ion-reorder>\n      <ion-item>\n        <ion-label> Item 7 </ion-label>\n      </ion-item>\n    </ion-reorder>\n\n    <ion-reorder>\n      <ion-item>\n        <ion-label> Item 8 </ion-label>\n      </ion-item>\n    </ion-reorder>\n  </ion-reorder-group>\n</template>\n\n<script>\n  import { IonIcon, IonItem, IonLabel, IonReorder, IonReorderGroup } from \'@ionic/vue\';\n  import { pizza } from \'ionicons/icons\';\n  import { defineComponent } from \'vue\';\n\n  export default defineComponent({\n    components: {\n      IonIcon,\n      IonItem,\n      IonLabel,\n      IonReorder,\n      IonReorderGroup,\n    },\n    setup() {\n      const doReorder = (event: CustomEvent) => {\n        // The `from` and `to` properties contain the index of the item\n        // when the drag started and ended, respectively\n        console.log(\'Dragged from index\', event.detail.from, \'to\', event.detail.to);\n\n        // Finish the reorder and position the item in the DOM based on\n        // where the gesture ended. This method can also be called directly\n        // by the reorder group\n        event.detail.complete();\n      };\n      return { doReorder, pizza };\n    },\n  });\n<\/script>\n')),(0,i.kt)("h3",{id:"updating-data-4"},"Updating Data"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html"},"<script>\n  ...\n  import { defineComponent, ref } from 'vue';\n\n  export default defineComponent({\n    ...\n    setup() {\n      const items = ref([1, 2, 3, 4, 5]);\n\n      const doReorder = (event: CustomEvent) => {\n        // Before complete is called with the items they will remain in the\n        // order before the drag\n        console.log('Before complete', items.value);\n\n        // Finish the reorder and position the item in the DOM based on\n        // where the gesture ended. Update the items variable to the\n        // new order of items\n        items.value = event.detail.complete(items.value);\n\n        // After complete is called the items will be in the new order\n        console.log('After complete', items.value);\n      }\n      return { doReorder, items, ... }\n    }\n  });\n<\/script>\n")))),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"disabled"},"disabled"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"If ",(0,i.kt)("inlineCode",{parentName:"td"},"true"),", the reorder will be hidden.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Attribute")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"disabled"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Type")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Default")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"true"))))),(0,i.kt)("h2",{id:"events"},"Events"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Name"),(0,i.kt)("th",{parentName:"tr",align:null},"Description"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"ionItemReorder")),(0,i.kt)("td",{parentName:"tr",align:null},"Event that needs to be listened to in order to complete the reorder action.")))),(0,i.kt)("p",null,"Once the event has been emitted, the ",(0,i.kt)("inlineCode",{parentName:"p"},"complete()")," method then needs\nto be called in order to finalize the reorder action. |"),(0,i.kt)("h2",{id:"methods"},"Methods"),(0,i.kt)("h3",{id:"complete"},"complete"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null}),(0,i.kt)("th",{parentName:"tr",align:null}))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Description")),(0,i.kt)("td",{parentName:"tr",align:null},"Completes the reorder operation. Must be called by the ",(0,i.kt)("inlineCode",{parentName:"td"},"ionItemReorder")," event.",(0,i.kt)("br",null),(0,i.kt)("br",null),"If a list of items is passed, the list will be reordered and returned in the",(0,i.kt)("br",null),"proper order.",(0,i.kt)("br",null),(0,i.kt)("br",null),"If no parameters are passed or if ",(0,i.kt)("inlineCode",{parentName:"td"},"true")," is passed in, the reorder will complete",(0,i.kt)("br",null),"and the item will remain in the position it was dragged to. If ",(0,i.kt)("inlineCode",{parentName:"td"},"false")," is passed,",(0,i.kt)("br",null),"the reorder will complete and the item will bounce back to its original position.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Signature")),(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("inlineCode",{parentName:"td"},"complete(listOrReorder?: boolean \\| any[] \\| undefined) => Promise<any>"))))))}h.isMDXComponent=!0}}]);