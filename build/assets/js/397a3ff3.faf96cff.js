"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[75879],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,o=e.originalType,s=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),u=d(n),c=l,k=u["".concat(s,".").concat(c)]||u[c]||p[c]||o;return n?a.createElement(k,r(r({ref:t},m),{},{components:n})):a.createElement(k,r({ref:t},m))}));function c(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var o=n.length,r=new Array(o);r[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:l,r[1]=i;for(var d=2;d<o;d++)r[d]=n[d];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},58215:function(e,t,n){var a=n(67294);t.Z=function(e){var t=e.children,n=e.hidden,l=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:l},t)}},26396:function(e,t,n){n.d(t,{Z:function(){return u}});var a=n(87462),l=n(67294),o=n(72389),r=n(79443);var i=function(){var e=(0,l.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e},s=n(89521),d=n(86010),m="tabItem_1uMI";function p(e){var t,n,a,o=e.lazy,r=e.block,p=e.defaultValue,u=e.values,c=e.groupId,k=e.className,h=l.Children.map(e.children,(function(e){if((0,l.isValidElement)(e)&&void 0!==e.props.value)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),N=null!=u?u:h.map((function(e){var t=e.props;return{value:t.value,label:t.label}})),g=(0,s.lx)(N,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var b=null===p?p:null!=(t=null!=p?p:null==(n=h.find((function(e){return e.props.default})))?void 0:n.props.value)?t:null==(a=h[0])?void 0:a.props.value;if(null!==b&&!N.some((function(e){return e.value===b})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+b+'" but none of its children has the corresponding value. Available values are: '+N.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var y=i(),f=y.tabGroupChoices,C=y.setTabGroupChoices,v=(0,l.useState)(b),w=v[0],M=v[1],I=[],D=(0,s.o5)().blockElementScrollPositionUntilNextRender;if(null!=c){var E=f[c];null!=E&&E!==w&&N.some((function(e){return e.value===E}))&&M(E)}var x=function(e){var t=e.currentTarget,n=I.indexOf(t),a=N[n].value;a!==w&&(D(t),M(a),null!=c&&C(c,a))},T=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=I.indexOf(e.currentTarget)+1;n=I[a]||I[0];break;case"ArrowLeft":var l=I.indexOf(e.currentTarget)-1;n=I[l]||I[I.length-1]}null==(t=n)||t.focus()};return l.createElement("div",{className:"tabs-container"},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,d.Z)("tabs",{"tabs--block":r},k)},N.map((function(e){var t=e.value,n=e.label;return l.createElement("li",{role:"tab",tabIndex:w===t?0:-1,"aria-selected":w===t,className:(0,d.Z)("tabs__item",m,{"tabs__item--active":w===t}),key:t,ref:function(e){return I.push(e)},onKeyDown:T,onFocus:x,onClick:x},null!=n?n:t)}))),o?(0,l.cloneElement)(h.filter((function(e){return e.props.value===w}))[0],{className:"margin-vert--md"}):l.createElement("div",{className:"margin-vert--md"},h.map((function(e,t){return(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==w})}))))}function u(e){var t=(0,o.Z)();return l.createElement(p,(0,a.Z)({key:String(t)},e))}},90600:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return d},contentTitle:function(){return m},metadata:function(){return p},toc:function(){return u},default:function(){return k}});var a=n(87462),l=n(63366),o=(n(67294),n(3905)),r=n(26396),i=n(58215),s=["components"],d={sidebar_label:"ion-modal",demoUrl:"/docs/demos/api/modal/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/modal/index.html"},m="ion-modal",p={unversionedId:"api/modal",id:"version-v5/api/modal",isDocsHomePage:!1,title:"ion-modal",description:"A Modal is a dialog that appears on top of the app's content, and must be dismissed by the app before interaction can resume. It is useful as a select component when there are a lot of options to choose from, or when filtering items in a list, as well as many other use cases.",source:"@site/versioned_docs/version-v5/api/modal.md",sourceDirName:"api",slug:"/api/modal",permalink:"/developer/docs/v5/api/modal",editUrl:"https://github.com/ionic-team/ionic-docs/tree/main/docs/api/modal.md",tags:[],version:"v5",frontMatter:{sidebar_label:"ion-modal",demoUrl:"/docs/demos/api/modal/index.html",demoSourceUrl:"https://github.com/ionic-team/ionic-docs/tree/main/static/demos/api/modal/index.html"},sidebar:"version-v5/api",previous:{title:"ion-split-pane",permalink:"/developer/docs/v5/api/split-pane"},next:{title:"ion-backdrop",permalink:"/developer/docs/v5/api/backdrop"}},u=[{value:"Dismissing",id:"dismissing",children:[],level:2},{value:"Customization",id:"customization",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Passing Data",id:"passing-data",children:[],level:3},{value:"Dismissing a Modal",id:"dismissing-a-modal",children:[{value:"Lazy Loading",id:"lazy-loading",children:[],level:4}],level:3},{value:"Swipeable Modals",id:"swipeable-modals",children:[],level:3},{value:"Style Placement",id:"style-placement",children:[],level:3},{value:"Passing Data",id:"passing-data-1",children:[],level:3},{value:"Dismissing a Modal",id:"dismissing-a-modal-1",children:[],level:3},{value:"Swipeable Modals",id:"swipeable-modals-1",children:[],level:3},{value:"Swipeable Modals",id:"swipeable-modals-2",children:[],level:3},{value:"Passing Data",id:"passing-data-2",children:[],level:3},{value:"Dismissing a Modal",id:"dismissing-a-modal-2",children:[],level:3},{value:"Swipeable Modals",id:"swipeable-modals-3",children:[],level:3}],level:2},{value:"Properties",id:"properties",children:[{value:"animated",id:"animated",children:[],level:3},{value:"backdropDismiss",id:"backdropdismiss",children:[],level:3},{value:"component",id:"component",children:[],level:3},{value:"componentProps",id:"componentprops",children:[],level:3},{value:"cssClass",id:"cssclass",children:[],level:3},{value:"enterAnimation",id:"enteranimation",children:[],level:3},{value:"keyboardClose",id:"keyboardclose",children:[],level:3},{value:"leaveAnimation",id:"leaveanimation",children:[],level:3},{value:"mode",id:"mode",children:[],level:3},{value:"presentingElement",id:"presentingelement",children:[],level:3},{value:"showBackdrop",id:"showbackdrop",children:[],level:3},{value:"swipeToClose",id:"swipetoclose",children:[],level:3}],level:2},{value:"Events",id:"events",children:[],level:2},{value:"Methods",id:"methods",children:[{value:"dismiss",id:"dismiss",children:[],level:3},{value:"onDidDismiss",id:"ondiddismiss",children:[],level:3},{value:"onWillDismiss",id:"onwilldismiss",children:[],level:3},{value:"present",id:"present",children:[],level:3}],level:2},{value:"CSS Custom Properties",id:"css-custom-properties",children:[],level:2}],c={toc:u};function k(e){var t=e.components,n=(0,l.Z)(e,s);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"ion-modal"},"ion-modal"),(0,o.kt)("p",null,"A Modal is a dialog that appears on top of the app's content, and must be dismissed by the app before interaction can resume. It is useful as a select component when there are a lot of options to choose from, or when filtering items in a list, as well as many other use cases."),(0,o.kt)("h2",{id:"dismissing"},"Dismissing"),(0,o.kt)("p",null,"The modal can be dismissed after creation by calling the ",(0,o.kt)("inlineCode",{parentName:"p"},"dismiss()")," method on the modal controller. The ",(0,o.kt)("inlineCode",{parentName:"p"},"onDidDismiss")," function can be called to perform an action after the modal is dismissed."),(0,o.kt)("h2",{id:"customization"},"Customization"),(0,o.kt)("p",null,"Modal uses scoped encapsulation, which means it will automatically scope its CSS by appending each of the styles with an additional class at runtime. Overriding scoped selectors in CSS requires a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/CSS/Specificity"},"higher specificity")," selector."),(0,o.kt)("p",null,"We recommend passing a custom class to ",(0,o.kt)("inlineCode",{parentName:"p"},"cssClass")," in the ",(0,o.kt)("inlineCode",{parentName:"p"},"create")," method and using that to add custom styles to the host and inner elements. This property can also accept multiple classes separated by spaces. View the ",(0,o.kt)("a",{parentName:"p",href:"#usage"},"Usage")," section for an example of how to pass a class using ",(0,o.kt)("inlineCode",{parentName:"p"},"cssClass"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},'/* DOES NOT WORK - not specific enough */\n.modal-wrapper {\n  background: #222;\n}\n\n/* Works - pass "my-custom-class" in cssClass to increase specificity */\n.my-custom-class .modal-wrapper {\n  background: #222;\n}\n')),(0,o.kt)("p",null,"Any of the defined ",(0,o.kt)("a",{parentName:"p",href:"#css-custom-properties"},"CSS Custom Properties")," can be used to style the Modal without needing to target individual elements:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-css"},".my-custom-class {\n  --background: #222;\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you are building an Ionic Angular app, the styles need to be added to a global stylesheet file. Read ",(0,o.kt)("a",{parentName:"p",href:"#style-placement"},"Style Placement")," in the Angular section below for more information.")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," works under the assumption that stacked modals are the same size. As a result, each subsequent modal will have no box shadow and a backdrop opacity of ",(0,o.kt)("inlineCode",{parentName:"p"},"0"),". This is to avoid the effect of shadows and backdrops getting darker with each added modal. This can be changed by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"--box-shadow")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"--backdrop-opacity")," CSS variables:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"ion-modal.stack-modal {\n  --box-shadow: 0 28px 48px rgba(0, 0, 0, 0.4);\n  --backdrop-opacity: var(--ion-backdrop-opacity, 0.32);\n}\n")),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)(r.Z,{groupId:"framework",defaultValue:"angular",values:[{value:"angular",label:"Angular"},{value:"javascript",label:"Javascript"},{value:"react",label:"React"},{value:"stencil",label:"Stencil"},{value:"vue",label:"Vue"}],mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"angular",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component } from '@angular/core';\nimport { ModalController } from '@ionic/angular';\nimport { ModalPage } from '../modal/modal.page';\n\n@Component({\n  selector: 'modal-example',\n  templateUrl: 'modal-example.html',\n  styleUrls: ['./modal-example.css'],\n})\nexport class ModalExample {\n  constructor(public modalController: ModalController) {}\n\n  async presentModal() {\n    const modal = await this.modalController.create({\n      component: ModalPage,\n      cssClass: 'my-custom-class',\n    });\n    return await modal.present();\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, Input } from '@angular/core';\n\n@Component({\n  selector: 'modal-page',\n})\nexport class ModalPage {\n  constructor() {}\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you need a wrapper element inside of your modal component, we recommend using a ",(0,o.kt)("inlineCode",{parentName:"p"},'<div class="ion-page">')," so that the component dimensions are still computed properly.")),(0,o.kt)("h3",{id:"passing-data"},"Passing Data"),(0,o.kt)("p",null,"During creation of a modal, data can be passed in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),".\nThe previous example can be written to include data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"async presentModal() {\n  const modal = await this.modalController.create({\n    component: ModalPage,\n    cssClass: 'my-custom-class',\n    componentProps: {\n      'firstName': 'Douglas',\n      'lastName': 'Adams',\n      'middleInitial': 'N'\n    }\n  });\n  return await modal.present();\n}\n")),(0,o.kt)("p",null,"To get the data passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),", set it as an ",(0,o.kt)("inlineCode",{parentName:"p"},"@Input"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export class ModalPage {\n  // Data passed in by componentProps\n  @Input() firstName: string;\n  @Input() lastName: string;\n  @Input() middleInitial: string;\n}\n")),(0,o.kt)("h3",{id:"dismissing-a-modal"},"Dismissing a Modal"),(0,o.kt)("p",null,"A modal can be dismissed by calling the dismiss method on the modal controller and optionally passing any data from the modal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"export class ModalPage {\n  ...\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalController.dismiss({\n      'dismissed': true\n    });\n  }\n}\n")),(0,o.kt)("p",null,"After being dismissed, the data can be read in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"onWillDismiss")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"onDidDismiss")," attached to the modal after creation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { data } = await modal.onWillDismiss();\nconsole.log(data);\n")),(0,o.kt)("h4",{id:"lazy-loading"},"Lazy Loading"),(0,o.kt)("p",null,"When lazy loading a modal, it's important to note that the modal will not be loaded when it is opened, but rather when the module that imports the modal's module is loaded."),(0,o.kt)("p",null,"For example, say there exists a ",(0,o.kt)("inlineCode",{parentName:"p"},"CalendarComponent")," and an ",(0,o.kt)("inlineCode",{parentName:"p"},"EventModal"),". The modal is presented by clicking a button in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CalendarComponent"),". In Angular, the ",(0,o.kt)("inlineCode",{parentName:"p"},"EventModalModule")," would need to be included in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CalendarComponentModule")," since the modal is created in the ",(0,o.kt)("inlineCode",{parentName:"p"},"CalendarComponent"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\n\nimport { CalendarComponent } from './calendar.component';\nimport { EventModalModule } from '../modals/event/event.module';\n\n@NgModule({\n  declarations: [CalendarComponent],\n  imports: [IonicModule, CommonModule, EventModalModule],\n  exports: [CalendarComponent],\n})\nexport class CalendarComponentModule {}\n")),(0,o.kt)("h3",{id:"swipeable-modals"},"Swipeable Modals"),(0,o.kt)("p",null,"Modals in iOS mode have the ability to be presented in a card-style and swiped to close. The card-style presentation and swipe to close gesture are not mutually exclusive, meaning you can pick and choose which features you want to use. For example, you can have a card-style modal that cannot be swiped or a full sized modal that can be swiped."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card style modals when running on iPhone-sized devices do not have backdrops. As a result, the ",(0,o.kt)("inlineCode",{parentName:"p"},"--backdrop-opacity")," variable will not have any effect.")),(0,o.kt)("p",null,"If you are creating an application that uses ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-tabs"),", it is recommended that you get the parent ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-router-outlet")," using ",(0,o.kt)("inlineCode",{parentName:"p"},"this.routerOutlet.parentOutlet.nativeEl"),", otherwise the tabbar will not scale down when the modal opens."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { IonRouterOutlet } from '@ionic/angular';\n\nconstructor(private routerOutlet: IonRouterOutlet) {}\n\nasync presentModal() {\n  const modal = await this.modalController.create({\n    component: ModalPage,\n    cssClass: 'my-custom-class',\n    swipeToClose: true,\n    presentingElement: this.routerOutlet.nativeEl\n  });\n  return await modal.present();\n}\n")),(0,o.kt)("p",null,"In most scenarios, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-router-outlet")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement")," is fine. In cases where you are presenting a card-style modal from within another modal, you should pass in the top-most ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"import { ModalController } from '@ionic/angular';\n\nconstructor(private modalController: ModalController) {}\n\nasync presentModal() {\n  const modal = await this.modalController.create({\n    component: ModalPage,\n    cssClass: 'my-custom-class',\n    swipeToClose: true,\n    presentingElement: await this.modalController.getTop() // Get the top-most ion-modal\n  });\n  return await modal.present();\n}\n")),(0,o.kt)("h3",{id:"style-placement"},"Style Placement"),(0,o.kt)("p",null,"In Angular, the CSS of a specific page is scoped only to elements of that page. Even though the Modal can be presented from within a page, the ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," element is appended outside of the current page. This means that any custom styles need to go in a global stylesheet file. In an Ionic Angular starter this can be the ",(0,o.kt)("inlineCode",{parentName:"p"},"src/global.scss")," file or you can register a new global style file by ",(0,o.kt)("a",{parentName:"p",href:"https://angular.io/guide/workspace-config#style-script-config"},"adding to the ",(0,o.kt)("inlineCode",{parentName:"a"},"styles")," build option in ",(0,o.kt)("inlineCode",{parentName:"a"},"angular.json")),".")),(0,o.kt)(i.Z,{value:"javascript",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},'customElements.define(\n  \'modal-page\',\n  class extends HTMLElement {\n    connectedCallback() {\n      this.innerHTML = `\n<ion-header>\n  <ion-toolbar>\n    <ion-title>Modal Header</ion-title>\n    <ion-buttons slot="primary">\n      <ion-button onClick="dismissModal()">\n        <ion-icon slot="icon-only" name="close"></ion-icon>\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n<ion-content class="ion-padding">\n  Modal Content\n</ion-content>`;\n    }\n  }\n);\n\nfunction presentModal() {\n  // create the modal with the `modal-page` component\n  const modalElement = document.createElement(\'ion-modal\');\n  modalElement.component = \'modal-page\';\n  modalElement.cssClass = \'my-custom-class\';\n\n  // present the modal\n  document.body.appendChild(modalElement);\n  return modalElement.present();\n}\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you need a wrapper element inside of your modal component, we recommend using a ",(0,o.kt)("inlineCode",{parentName:"p"},'<div class="ion-page">')," so that the component dimensions are still computed properly.")),(0,o.kt)("h3",{id:"passing-data-1"},"Passing Data"),(0,o.kt)("p",null,"During creation of a modal, data can be passed in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),". The previous example can be written to include data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const modalElement = document.createElement('ion-modal');\nmodalElement.component = 'modal-page';\nmodalElement.cssClass = 'my-custom-class';\nmodalElement.componentProps = {\n  firstName: 'Douglas',\n  lastName: 'Adams',\n  middleInitial: 'N',\n};\n")),(0,o.kt)("p",null,"To get the data passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),", query for the modal in the ",(0,o.kt)("inlineCode",{parentName:"p"},"modal-page"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},"customElements.define('modal-page', class extends HTMLElement {\n  connectedCallback() {\n    const modalElement = document.querySelector('ion-modal');\n    console.log(modalElement.componentProps.firstName);\n\n    ...\n  }\n}\n")),(0,o.kt)("h3",{id:"dismissing-a-modal-1"},"Dismissing a Modal"),(0,o.kt)("p",null,"A modal can be dismissed by calling the dismiss method and optionally passing any data from the modal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"async function dismissModal() {\n  await modal.dismiss({\n    dismissed: true,\n  });\n}\n")),(0,o.kt)("p",null,"After being dismissed, the data can be read in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"onWillDismiss")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"onDidDismiss")," attached to the modal after creation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { data } = await modalElement.onWillDismiss();\nconsole.log(data);\n")),(0,o.kt)("h3",{id:"swipeable-modals-1"},"Swipeable Modals"),(0,o.kt)("p",null,"Modals in iOS mode have the ability to be presented in a card-style and swiped to close. The card-style presentation and swipe to close gesture are not mutually exclusive, meaning you can pick and choose which features you want to use. For example, you can have a card-style modal that cannot be swiped or a full sized modal that can be swiped."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card style modals when running on iPhone-sized devices do not have backdrops. As a result, the ",(0,o.kt)("inlineCode",{parentName:"p"},"--backdrop-opacity")," variable will not have any effect.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const modalElement = document.createElement('ion-modal');\nmodalElement.component = 'modal-page';\nmodalElement.cssClass = 'my-custom-class';\nmodalElement.swipeToClose = true;\nmodalElement.presentingElement = document.querySelector('ion-nav');\n")),(0,o.kt)("p",null,"In most scenarios, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-nav")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement")," is fine. In cases where you are presenting a card-style modal from within a modal, you should pass in the top-most ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const modalElement = document.createElement('ion-modal');\nmodalElement.component = 'modal-page';\nmodalElement.cssClass = 'my-custom-class';\nmodalElement.swipeToClose = true;\nmodalElement.presentingElement = await modalController.getTop(); // Get the top-most ion-modal\n"))),(0,o.kt)(i.Z,{value:"react",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"/* Using with useIonModal Hook */\n\nimport React, { useState } from 'react';\nimport { IonButton, IonContent, IonPage, useIonModal } from '@ionic/react';\n\nconst Body: React.FC<{\n  count: number;\n  onDismiss: () => void;\n  onIncrement: () => void;\n}> = ({ count, onDismiss, onIncrement }) => (\n  <div>\n    count: {count}\n    <IonButton expand=\"block\" onClick={() => onIncrement()}>\n      Increment Count\n    </IonButton>\n    <IonButton expand=\"block\" onClick={() => onDismiss()}>\n      Close\n    </IonButton>\n  </div>\n);\n\nconst ModalExample: React.FC = () => {\n  const [count, setCount] = useState(0);\n\n  const handleIncrement = () => {\n    setCount(count + 1);\n  };\n\n  const handleDismiss = () => {\n    dismiss();\n  };\n\n  /**\n   * First parameter is the component to show, second is the props to pass\n   */\n  const [present, dismiss] = useIonModal(Body, {\n    count,\n    onDismiss: handleDismiss,\n    onIncrement: handleIncrement,\n  });\n\n  return (\n    <IonPage>\n      <IonContent fullscreen>\n        <IonButton\n          expand=\"block\"\n          onClick={() => {\n            present({\n              cssClass: 'my-class',\n            });\n          }}\n        >\n          Show Modal\n        </IonButton>\n        <div>Count: {count}</div>\n      </IonContent>\n    </IonPage>\n  );\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"/* Using with IonModal Component */\n\nimport React, { useState } from 'react';\nimport { IonModal, IonButton, IonContent } from '@ionic/react';\n\nexport const ModalExample: React.FC = () => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <IonContent>\n      <IonModal isOpen={showModal} cssClass=\"my-custom-class\">\n        <p>This is modal content</p>\n        <IonButton onClick={() => setShowModal(false)}>Close Modal</IonButton>\n      </IonModal>\n      <IonButton onClick={() => setShowModal(true)}>Show Modal</IonButton>\n    </IonContent>\n  );\n};\n")),(0,o.kt)("h3",{id:"swipeable-modals-2"},"Swipeable Modals"),(0,o.kt)("p",null,"Modals in iOS mode have the ability to be presented in a card-style and swiped to close. The card-style presentation and swipe to close gesture are not mutually exclusive, meaning you can pick and choose which features you want to use. For example, you can have a card-style modal that cannot be swiped or a full sized modal that can be swiped."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card style modals when running on iPhone-sized devices do not have backdrops. As a result, the ",(0,o.kt)("inlineCode",{parentName:"p"},"--backdrop-opacity")," variable will not have any effect.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const App: React.FC = () => {\n  const routerRef = useRef<HTMLIonRouterOutletElement | null>(null);\n\n  return (\n    <IonApp>\n      <IonReactRouter>\n        <IonRouterOutlet ref={routerRef}>\n          <Route path=\"/home\" render={() => <Home router={routerRef.current} />}  exact={true} />\n        </IonRouterOutlet>\n      </IonReactRouter>\n    </IonApp>\n  )\n};\n\n...\n\ninterface HomePageProps {\n  router: HTMLIonRouterOutletElement | null;\n}\n\nconst Home: React.FC<HomePageProps> = ({ router }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    ...\n\n    <IonModal\n      isOpen={showModal}\n      cssClass='my-custom-class'\n      swipeToClose={true}\n      presentingElement={router || undefined}\n      onDidDismiss={() => setShowModal(false)}>\n      <p>This is modal content</p>\n    </IonModal>\n\n    ...\n  );\n};\n\n")),(0,o.kt)("p",null,"In most scenarios, setting a ref on ",(0,o.kt)("inlineCode",{parentName:"p"},"IonRouterOutlet")," and passing that ref's ",(0,o.kt)("inlineCode",{parentName:"p"},"current")," value to ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement")," is fine. In cases where you are presenting a card-style modal from within another modal, you should pass in the top-most ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," ref as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"<IonModal\n  ref={firstModalRef}\n  isOpen={showModal}\n  cssClass='my-custom-class'\n  swipeToClose={true}\n  presentingElement={router || undefined}\n  onDidDismiss={() => setShowModal(false)}>\n    <p>This is modal content</p>\n    <IonButton onClick={() => setShow2ndModal(true)}>Show 2nd Modal</IonButton>\n    <IonButton onClick={() => setShowModal(false)}>Close Modal</IonButton>\n</IonModal>\n<IonModal\n  isOpen={show2ndModal}\n  cssClass='my-custom-class'\n  presentingElement={firstModalRef.current}\n  onDidDismiss={() => setShow2ndModal(false)}>\n  <p>This is more modal content</p>\n  <IonButton onClick={() => setShow2ndModal(false)}>Close Modal</IonButton>\n</IonModal>\n"))),(0,o.kt)(i.Z,{value:"stencil",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, h } from '@stencil/core';\n\nimport { modalController } from '@ionic/core';\n\n@Component({\n  tag: 'modal-example',\n  styleUrl: 'modal-example.css',\n})\nexport class ModalExample {\n  async presentModal() {\n    const modal = await modalController.create({\n      component: 'page-modal',\n      cssClass: 'my-custom-class',\n    });\n    await modal.present();\n  }\n}\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, h } from '@stencil/core';\n\n@Component({\n  tag: 'page-modal',\n  styleUrl: 'page-modal.css',\n})\nexport class PageModal {\n  render() {\n    return [\n      <ion-list>\n        <ion-item>\n          <ion-label>Documentation</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Feedback</ion-label>\n        </ion-item>\n        <ion-item>\n          <ion-label>Settings</ion-label>\n        </ion-item>\n      </ion-list>,\n    ];\n  }\n}\n")),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you need a wrapper element inside of your modal component, we recommend using a ",(0,o.kt)("inlineCode",{parentName:"p"},'<div class="ion-page">')," so that the component dimensions are still computed properly.")),(0,o.kt)("h3",{id:"passing-data-2"},"Passing Data"),(0,o.kt)("p",null,"During creation of a modal, data can be passed in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),".\nThe previous example can be written to include data:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"async presentModal() {\n  const modal = await modalController.create({\n    component: 'page-modal',\n    cssClass: 'my-custom-class',\n    componentProps: {\n      'firstName': 'Douglas',\n      'lastName': 'Adams',\n      'middleInitial': 'N'\n    }\n  });\n  await modal.present();\n}\n")),(0,o.kt)("p",null,"To get the data passed into the ",(0,o.kt)("inlineCode",{parentName:"p"},"componentProps"),", set each one as a ",(0,o.kt)("inlineCode",{parentName:"p"},"@Prop"),":"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, Prop, h } from '@stencil/core';\n\n@Component({\n  tag: 'page-modal',\n  styleUrl: 'page-modal.css',\n})\nexport class PageModal {\n  // Data passed in by componentProps\n  @Prop() firstName: string;\n  @Prop() lastName: string;\n  @Prop() middleInitial: string;\n}\n")),(0,o.kt)("h3",{id:"dismissing-a-modal-2"},"Dismissing a Modal"),(0,o.kt)("p",null,"A modal can be dismissed by calling the dismiss method on the modal controller and optionally passing any data from the modal."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"export class ModalPage {\n  ...\n\n  dismiss(data?: any) {\n    // dismiss the closest modal and optionally pass back data\n    (this.el.closest('ion-modal') as any).dismiss({\n      'dismissed': true\n    });\n  }\n}\n")),(0,o.kt)("p",null,"After being dismissed, the data can be read in through the ",(0,o.kt)("inlineCode",{parentName:"p"},"onWillDismiss")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"onDidDismiss")," attached to the modal after creation:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"const { data } = await modal.onWillDismiss();\nconsole.log(data);\n")),(0,o.kt)("h3",{id:"swipeable-modals-3"},"Swipeable Modals"),(0,o.kt)("p",null,"Modals in iOS mode have the ability to be presented in a card-style and swiped to close. The card-style presentation and swipe to close gesture are not mutually exclusive, meaning you can pick and choose which features you want to use. For example, you can have a card-style modal that cannot be swiped or a full sized modal that can be swiped."),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"Card style modals when running on iPhone-sized devices do not have backdrops. As a result, the ",(0,o.kt)("inlineCode",{parentName:"p"},"--backdrop-opacity")," variable will not have any effect.")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import { Component, Element, h } from '@stencil/core';\n\nimport { modalController } from '@ionic/core';\n\n@Component({\n  tag: 'modal-example',\n  styleUrl: 'modal-example.css',\n})\nexport class ModalExample {\n  @Element() el: any;\n\n  async presentModal() {\n    const modal = await modalController.create({\n      component: 'page-modal',\n      cssClass: 'my-custom-class',\n      swipeToClose: true,\n      presentingElement: this.el.closest('ion-router-outlet'),\n    });\n    await modal.present();\n  }\n}\n")),(0,o.kt)("p",null,"In most scenarios, using the ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-router-outlet")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement")," is fine. In cases where you are presenting a card-style modal from within another modal, you should pass in the top-most ",(0,o.kt)("inlineCode",{parentName:"p"},"ion-modal")," element as the ",(0,o.kt)("inlineCode",{parentName:"p"},"presentingElement"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"async presentModal() {\n  const modal = await modalController.create({\n    component: 'page-modal',\n    cssClass: 'my-custom-class',\n    swipeToClose: true,\n    presentingElement: await modalController.getTop() // Get the top-most ion-modal\n  });\n  await modal.present();\n}\n"))),(0,o.kt)(i.Z,{value:"vue",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <ion-header>\n    <ion-toolbar>\n      <ion-title>{{ title }}</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-content class=\"ion-padding\"> {{ content }} </ion-content>\n</template>\n\n<script>\n  import { IonContent, IonHeader, IonTitle, IonToolbar } from '@ionic/vue';\n  import { defineComponent } from 'vue';\n\n  export default defineComponent({\n    name: 'Modal',\n    props: {\n      title: { type: String, default: 'Super Modal' },\n    },\n    data() {\n      return {\n        content: 'Content',\n      };\n    },\n    components: { IonContent, IonHeader, IonTitle, IonToolbar },\n  });\n<\/script>\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},"<template>\n  <ion-page>\n    <ion-content class=\"ion-padding\">\n      <ion-button @click=\"openModal\">Open Modal</ion-button>\n    </ion-content>\n  </ion-page>\n</template>\n\n<script>\n  import { IonButton, IonContent, IonPage, modalController } from '@ionic/vue';\n  import Modal from './modal.vue';\n\n  export default {\n    components: { IonButton, IonContent, IonPage },\n    methods: {\n      async openModal() {\n        const modal = await modalController.create({\n          component: Modal,\n          cssClass: 'my-custom-class',\n          componentProps: {\n            title: 'New Title',\n          },\n        });\n        return modal.present();\n      },\n    },\n  };\n<\/script>\n")),(0,o.kt)("p",null,"Developers can also use this component directly in their template:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-html"},'<template>\n  <ion-button @click="setOpen(true)">Show Modal</ion-button>\n  <ion-modal :is-open="isOpenRef" css-class="my-custom-class" @didDismiss="setOpen(false)">\n    <Modal :data="data"></Modal>\n  </ion-modal>\n</template>\n\n<script>\n  import { IonModal, IonButton } from \'@ionic/vue\';\n  import { defineComponent, ref } from \'vue\';\n  import Modal from \'./modal.vue\';\n\n  export default defineComponent({\n    components: { IonModal, IonButton, Modal },\n    setup() {\n      const isOpenRef = ref(false);\n      const setOpen = (state: boolean) => (isOpenRef.value = state);\n      const data = { content: \'New Content\' };\n      return { isOpenRef, setOpen, data };\n    },\n  });\n<\/script>\n')),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},"If you need a wrapper element inside of your modal component, we recommend using an ",(0,o.kt)("inlineCode",{parentName:"p"},"<ion-page>")," so that the component dimensions are still computed properly.")))),(0,o.kt)("h2",{id:"properties"},"Properties"),(0,o.kt)("h3",{id:"animated"},"animated"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", the modal will animate.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"animated"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true"))))),(0,o.kt)("h3",{id:"backdropdismiss"},"backdropDismiss"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", the modal will be dismissed when the backdrop is clicked.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"backdrop-dismiss"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true"))))),(0,o.kt)("h3",{id:"component"},"component"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The component to display inside of the modal.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"component"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"Function \\| HTMLElement \\| null \\| string"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"componentprops"},"componentProps"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The data to pass to the modal component.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined \\| { [key: string]: any; }"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"cssclass"},"cssClass"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Additional classes to apply for custom CSS. If multiple classes are",(0,o.kt)("br",null),"provided they should be separated by spaces.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"css-class"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"string \\| string[] \\| undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"enteranimation"},"enterAnimation"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Animation to use when the modal is presented.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"((baseEl: any, opts?: any) => Animation) \\| undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"keyboardclose"},"keyboardClose"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", the keyboard will be automatically dismissed when the overlay is presented.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"keyboard-close"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true"))))),(0,o.kt)("h3",{id:"leaveanimation"},"leaveAnimation"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Animation to use when the modal is dismissed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"((baseEl: any, opts?: any) => Animation) \\| undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"mode"},"mode"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The mode determines which platform styles to use.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"mode"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},'"ios" \\| "md"'))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"presentingelement"},"presentingElement"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"The element that presented the modal. This is used for card presentation effects",(0,o.kt)("br",null),"and for stacking multiple modals on top of each other. Only applies in iOS mode.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"HTMLElement \\| undefined"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"undefined"))))),(0,o.kt)("h3",{id:"showbackdrop"},"showBackdrop"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", a backdrop will be displayed behind the modal.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"show-backdrop"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"true"))))),(0,o.kt)("h3",{id:"swipetoclose"},"swipeToClose"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"If ",(0,o.kt)("inlineCode",{parentName:"td"},"true"),", the modal can be swiped to dismiss. Only applies in iOS mode.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Attribute")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"swipe-to-close"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Type")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"boolean"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Default")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"false"))))),(0,o.kt)("h2",{id:"events"},"Events"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ionModalDidDismiss")),(0,o.kt)("td",{parentName:"tr",align:null},"Emitted after the modal has dismissed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ionModalDidPresent")),(0,o.kt)("td",{parentName:"tr",align:null},"Emitted after the modal has presented.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ionModalWillDismiss")),(0,o.kt)("td",{parentName:"tr",align:null},"Emitted before the modal has dismissed.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"ionModalWillPresent")),(0,o.kt)("td",{parentName:"tr",align:null},"Emitted before the modal has presented.")))),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"dismiss"},"dismiss"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Dismiss the modal overlay after it has been presented.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Signature")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"dismiss(data?: any, role?: string \\| undefined) => Promise<boolean>"))))),(0,o.kt)("h3",{id:"ondiddismiss"},"onDidDismiss"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a promise that resolves when the modal did dismiss.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Signature")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onDidDismiss<T = any>() => Promise<OverlayEventDetail<T>>"))))),(0,o.kt)("h3",{id:"onwilldismiss"},"onWillDismiss"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Returns a promise that resolves when the modal will dismiss.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Signature")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"onWillDismiss<T = any>() => Promise<OverlayEventDetail<T>>"))))),(0,o.kt)("h3",{id:"present"},"present"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null}),(0,o.kt)("th",{parentName:"tr",align:null}))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Description")),(0,o.kt)("td",{parentName:"tr",align:null},"Present the modal overlay after it has been created.")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("strong",{parentName:"td"},"Signature")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"present() => Promise<void>"))))),(0,o.kt)("h2",{id:"css-custom-properties"},"CSS Custom Properties"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Name"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--backdrop-opacity")),(0,o.kt)("td",{parentName:"tr",align:null},"Opacity of the backdrop")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--background")),(0,o.kt)("td",{parentName:"tr",align:null},"Background of the modal content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--border-color")),(0,o.kt)("td",{parentName:"tr",align:null},"Border color of the modal content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--border-radius")),(0,o.kt)("td",{parentName:"tr",align:null},"Border radius of the modal content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--border-style")),(0,o.kt)("td",{parentName:"tr",align:null},"Border style of the modal content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--border-width")),(0,o.kt)("td",{parentName:"tr",align:null},"Border width of the modal content")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--height")),(0,o.kt)("td",{parentName:"tr",align:null},"Height of the modal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--max-height")),(0,o.kt)("td",{parentName:"tr",align:null},"Maximum height of the modal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--max-width")),(0,o.kt)("td",{parentName:"tr",align:null},"Maximum width of the modal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--min-height")),(0,o.kt)("td",{parentName:"tr",align:null},"Minimum height of the modal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--min-width")),(0,o.kt)("td",{parentName:"tr",align:null},"Minimum width of the modal")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"--width")),(0,o.kt)("td",{parentName:"tr",align:null},"Width of the modal")))))}k.isMDXComponent=!0}}]);