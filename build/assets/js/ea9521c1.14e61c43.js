"use strict";(self.webpackChunkionic_docs=self.webpackChunkionic_docs||[]).push([[76055],{3905:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return k}});var o=n(67294);function l(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function r(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){l(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function a(t,e){if(null==t)return{};var n,o,l=function(t,e){if(null==t)return{};var n,o,l={},i=Object.keys(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(o=0;o<i.length;o++)n=i[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(l[n]=t[n])}return l}var d=o.createContext({}),u=function(t){var e=o.useContext(d),n=e;return t&&(n="function"==typeof t?t(e):r(r({},e),t)),n},c=function(t){var e=u(t.components);return o.createElement(d.Provider,{value:e},t.children)},p={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},s=o.forwardRef((function(t,e){var n=t.components,l=t.mdxType,i=t.originalType,d=t.parentName,c=a(t,["components","mdxType","originalType","parentName"]),s=u(n),k=l,f=s["".concat(d,".").concat(k)]||s[k]||p[k]||i;return n?o.createElement(f,r(r({ref:e},c),{},{components:n})):o.createElement(f,r({ref:e},c))}));function k(t,e){var n=arguments,l=e&&e.mdxType;if("string"==typeof t||l){var i=n.length,r=new Array(i);r[0]=s;var a={};for(var d in e)hasOwnProperty.call(e,d)&&(a[d]=e[d]);a.originalType=t,a.mdxType="string"==typeof t?t:l,r[1]=a;for(var u=2;u<i;u++)r[u]=n[u];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}s.displayName="MDXCreateElement"},65125:function(t,e,n){n.r(e),n.d(e,{frontMatter:function(){return a},contentTitle:function(){return d},metadata:function(){return u},toc:function(){return c},default:function(){return s}});var o=n(87462),l=n(63366),i=(n(67294),n(3905)),r=["components"],a={title:"ionic cordova build",sidebar_label:"cordova build"},d=void 0,u={unversionedId:"cli/commands/cordova-build",id:"cli/commands/cordova-build",isDocsHomePage:!1,title:"ionic cordova build",description:"Ionic Cordova Build for Android and iOS Platform Builds",source:"@site/docs/cli/commands/cordova-build.md",sourceDirName:"cli/commands",slug:"/cli/commands/cordova-build",permalink:"/developer/docs/cli/commands/cordova-build",editUrl:"https://github.com/ionic-team/ionic-cli/edit/develop/packages/@ionic/cli/src/commands/cordova/build.ts",tags:[],version:"current",frontMatter:{title:"ionic cordova build",sidebar_label:"cordova build"},sidebar:"cli",previous:{title:"config unset",permalink:"/developer/docs/cli/commands/config-unset"},next:{title:"cordova compile",permalink:"/developer/docs/cli/commands/cordova-compile"}},c=[{value:"Examples",id:"examples",children:[],level:2},{value:"Inputs",id:"inputs",children:[],level:2},{value:"Options",id:"options",children:[],level:2},{value:"Advanced Options",id:"advanced-options",children:[],level:2}],p={toc:c};function s(t){var e=t.components,n=(0,l.Z)(t,r);return(0,i.kt)("wrapper",(0,o.Z)({},p,n,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("head",null,(0,i.kt)("title",null,"Ionic Cordova Build for Android and iOS Platform Builds"),(0,i.kt)("meta",{name:"description",content:"Like running Cordova Build directly, Ionic Cordova Build also builds web assets from Ionic Build and provides friendly checks for Android and iOS platforms."})),(0,i.kt)("p",null,"Use Cordova to build for Android and iOS platform targets"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"$ ionic cordova build [options]\n")),(0,i.kt)("p",null,"Like running ",(0,i.kt)("inlineCode",{parentName:"p"},"cordova build")," directly, ",(0,i.kt)("inlineCode",{parentName:"p"},"ionic cordova build")," also builds web assets from ",(0,i.kt)("inlineCode",{parentName:"p"},"ionic build")," and provides friendly checks for Android and iOS platforms."),(0,i.kt)("p",null,"To pass additional options to the Cordova CLI, use the ",(0,i.kt)("inlineCode",{parentName:"p"},"--")," separator after the Ionic CLI arguments."),(0,i.kt)("p",null,"The Cordova CLI requires a separator for platform-specific arguments for Android ",(0,i.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/android/index.html#using-flags"},"builds"),", so an additional separator is required for the Ionic CLI, but it is not required for iOS ",(0,i.kt)("a",{parentName:"p",href:"https://cordova.apache.org/docs/en/latest/guide/platforms/ios/index.html#using-flags"},"builds"),". See the example commands for usage with separators. To avoid using flags, consider using ",(0,i.kt)("inlineCode",{parentName:"p"},"--buildConfig")," with a ",(0,i.kt)("strong",{parentName:"p"},"build.json")," file."),(0,i.kt)("h2",{id:"examples"},"Examples"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},'$ ionic cordova build android\n$ ionic cordova build android --buildConfig=build.json\n$ ionic cordova build android --prod --release -- -- --gradleArg=-PcdvBuildMultipleApks=true\n$ ionic cordova build android --prod --release -- -- --keystore=filename.keystore --alias=myalias\n$ ionic cordova build android --prod --release -- -- --minSdkVersion=21\n$ ionic cordova build android --prod --release -- -- --versionCode=55\n$ ionic cordova build android --prod --release --buildConfig=build.json\n$ ionic cordova build ios\n$ ionic cordova build ios --buildConfig=build.json\n$ ionic cordova build ios --prod --release\n$ ionic cordova build ios --prod --release -- --developmentTeam="ABCD" --codeSignIdentity="iPhone Developer" --packageType="app-store"\n$ ionic cordova build ios --prod --release --buildConfig=build.json\n')),(0,i.kt)("h2",{id:"inputs"},"Inputs"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,"platform")))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"The platform to build (e.g. ",(0,i.kt)("code",null,"android"),", ",(0,i.kt)("code",null,"ios"),")"))))),(0,i.kt)("h2",{id:"options"},"Options"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-build",id:"option-build"},"--no-build"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Do not invoke an Ionic build")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-debug",id:"option-debug"},"--debug"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Mark as a debug build")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-release",id:"option-release"},"--release"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Mark as a release build")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-device",id:"option-device"},"--device"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Deploy build to a device")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-emulator",id:"option-emulator"},"--emulator"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Deploy build to an emulator")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-prod",id:"option-prod"},"--prod"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("p",null,"Flag to use the ",(0,i.kt)("code",null,"production")," configuration"))))),(0,i.kt)("h2",{id:"advanced-options"},"Advanced Options"),(0,i.kt)("table",{className:"reference-table"},(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-buildConfig",id:"option-buildConfig"},"--buildConfig",(0,i.kt)("span",{class:"option-spec"}," =<file>")))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Use the specified build configuration"))))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-configuration",id:"option-configuration"},"--configuration",(0,i.kt)("span",{class:"option-spec"}," =<conf>")))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Specify the configuration to use.")))),(0,i.kt)("tr",null,(0,i.kt)("th",null,"Aliases"),(0,i.kt)("td",null,(0,i.kt)("code",null,"-c")))),(0,i.kt)("thead",null,(0,i.kt)("tr",null,(0,i.kt)("th",{colSpan:"2"},(0,i.kt)("h3",null,(0,i.kt)("a",{href:"#option-source-map",id:"option-source-map"},"--source-map"))))),(0,i.kt)("tbody",null,(0,i.kt)("tr",null,(0,i.kt)("th",null,"Description"),(0,i.kt)("td",null,(0,i.kt)("div",null,(0,i.kt)("p",null,"Output source maps")))))))}s.isMDXComponent=!0}}]);